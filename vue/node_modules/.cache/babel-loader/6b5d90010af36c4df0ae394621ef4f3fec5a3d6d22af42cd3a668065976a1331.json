{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      message: \"\",\n      formData: {\n        loginId: '',\n        password: ''\n      },\n      errorMessages: {\n        loginId: '',\n        password: ''\n      }\n    };\n  },\n  mounted() {\n    this.fetchHelloMessage();\n  },\n  methods: {\n    submitForm() {\n      this.errorMessages = {\n        loginId: '',\n        password: ''\n      };\n      if (this.isAnyInputEmpty()) {\n        alert('모든 항목을 입력하세요.');\n        return;\n      }\n      this.sendDataToSerever(this.formData);\n    },\n    generalLogin() {\n      this.$router.push('/login/generallogin');\n    },\n    async sendDataToSerever(data) {\n      try {\n        const response = await axios.post('http://localhost:8080/login', data);\n        console.log(\"response from server\", response.data);\n        this.$router.push(\"/map\");\n      } catch (error) {\n        console.error('Error seding data to server', error);\n        if (error.response) {\n          // 서버 응답이 400대인 경우\n          if (error.response.status >= 400 && error.response.status < 500) {\n            // 여기에 클라이언트에게 알리고자 하는 작업을 추가\n            alert(error.response.data);\n          } else {\n            // 다른 상태 코드의 경우 에러 메시지만 설정\n            this.errorMessages = error.response.data;\n          }\n        }\n      }\n    },\n    isInputEmpty(value) {\n      return !value || value.trim() === '';\n    },\n    isAnyInputEmpty() {\n      // 입력 값이 하나라도 비어있으면 true 반환\n      return Object.values(this.formData).some(value => this.isInputEmpty(value));\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","message","formData","loginId","password","errorMessages","mounted","fetchHelloMessage","methods","submitForm","isAnyInputEmpty","alert","sendDataToSerever","generalLogin","$router","push","response","post","console","log","error","status","isInputEmpty","value","trim","Object","values","some"],"sources":["/Users/jangsubhin/캡스톤디자인/gourmetdiary/vue/gourmetdiary/src/components/LoginPage.vue"],"sourcesContent":["<template>\n   <div class=\"main\">\n        <div class=\"main_page\">\n            <div class=\"main_pageItem\">\n                <h1>미식 일기</h1>\n              <form @submit.prevent=\"submitForm\">\n                \n                <div class=\"mb-3 row\">\n                    <label for=\"inputId\" class=\"col-sm-2 col-form-label\">아이디</label>\n                    <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" id=\"inputId\" v-model=\"formData.loginId\">\n\n                         <!-- 입력 값이 없을 때 메시지 -->\n                        <div v-if=\"isInputEmpty(formData.loginId)\" class=\"text-danger\">아이디를 입력하세요.</div>\n                        <div v-if=\"errorMessages.loginId\" class=\"text-danger\">{{ errorMessages.loginId }}</div>\n                    </div>\n                \n                </div>\n\n                <div class=\"mb-3 row\">\n                    <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">비밀번호</label>\n                    <div class=\"col-sm-10\">\n                        <input type=\"password\" class=\"form-control\" id=\"inputPassword\" v-model=\"formData.password\">\n                        \n                         <!-- 입력 값이 없을 때 메시지 -->\n                    <div v-if=\"isInputEmpty(formData.password)\" class=\"text-danger\">비밀번호를 입력하세요.</div>\n                    <div v-if=\"errorMessages.password\" class=\"text-danger\">{{ errorMessages.password }}</div>\n\n                        <div class=\"d-grid gap-2\">\n                            <button class=\"btn btn-secondary gray\" type=\"submit\">로그인</button>\n                            <div class=\"login_func\">\n                                <div class=\"main_pageItem_btn\">\n                                    <button class=\"btn btn-link\" type=\"button\" @click=\"generalLogin\">회원가입</button>\n                                    <button class=\"btn btn-link\" type=\"button\" >아이디 찾기{{message}}</button>\n                                    <button class=\"btn btn-link\" type=\"button\" >비밀번호 찾기</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n              </form>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n    name: \"LoginPage\",\n    data () {\n        return {\n            message : \"\",\n            formData : {\n                loginId: '',\n                password: '',\n            },\n            errorMessages: {\n                loginId: '',\n                password: '',\n            },\n        };\n    },\n    mounted() {\n      this.fetchHelloMessage();\n    },\n    methods: {\n\n        submitForm() {\n            this.errorMessages = {\n                loginId : '',\n                password: '',\n            };\n\n            if (this.isAnyInputEmpty()) {\n            alert('모든 항목을 입력하세요.');\n            return;\n        }\n\n        this.sendDataToSerever(this.formData);\n\n        },\n\n        generalLogin() {\n            this.$router.push('/login/generallogin');\n        },\n        \n\n    async sendDataToSerever(data) {\n        try {\n            const response = await axios.post('http://localhost:8080/login',data);\n            console.log(\"response from server\", response.data);\n            this.$router.push(\"/map\");\n        } catch (error) {\n            console.error('Error seding data to server', error);\n\n            if (error.response) {\n            // 서버 응답이 400대인 경우\n                if (error.response.status >= 400 && error.response.status < 500) {\n                    // 여기에 클라이언트에게 알리고자 하는 작업을 추가\n                    alert(error.response.data);\n                } else {\n                    // 다른 상태 코드의 경우 에러 메시지만 설정\n                    this.errorMessages = error.response.data;\n                }\n        }\n        }\n     },\n     isInputEmpty(value) {\n        return !value || value.trim() === '';\n     },\n     isAnyInputEmpty() {\n        // 입력 값이 하나라도 비어있으면 true 반환\n        return Object.values(this.formData).some(value => this.isInputEmpty(value));\n    }\n        \n    },\n}\n</script>\n\n<style>\n.main {\n    position: absolute;\n    bottom: 0;\n    right : 0;\n    display: flex;\n\n}\n.main_page {\n    width:85vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.main_pageItem {\n    width: 500px;\n}\n\n.main_pageItem h1{\n    margin-bottom: 1em;\n    margin-left: 2em;\n}\n\n.login_pageItem_object label{\n    width: 110px;\n}\n\n.gray {\n    margin-top : 2em;\n}\n\n.login_func {\n    display: flex;\n    flex-direction: row;\n\n}\n\n\n\n\n</style>"],"mappings":";AA8CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,IAAGA,CAAA,EAAK;IACJ,OAAO;MACHC,OAAM,EAAI,EAAE;MACZC,QAAO,EAAI;QACPC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE;MACd,CAAC;MACDC,aAAa,EAAE;QACXF,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE;MACd;IACJ,CAAC;EACL,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IAELC,UAAUA,CAAA,EAAG;MACT,IAAI,CAACJ,aAAY,GAAI;QACjBF,OAAM,EAAI,EAAE;QACZC,QAAQ,EAAE;MACd,CAAC;MAED,IAAI,IAAI,CAACM,eAAe,CAAC,CAAC,EAAE;QAC5BC,KAAK,CAAC,eAAe,CAAC;QACtB;MACJ;MAEA,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACV,QAAQ,CAAC;IAErC,CAAC;IAEDW,YAAYA,CAAA,EAAG;MACX,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,qBAAqB,CAAC;IAC5C,CAAC;IAGL,MAAMH,iBAAiBA,CAACZ,IAAI,EAAE;MAC1B,IAAI;QACA,MAAMgB,QAAO,GAAI,MAAMlB,KAAK,CAACmB,IAAI,CAAC,6BAA6B,EAACjB,IAAI,CAAC;QACrEkB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,QAAQ,CAAChB,IAAI,CAAC;QAClD,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC,MAAM,CAAC;MAC7B,EAAE,OAAOK,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QAEnD,IAAIA,KAAK,CAACJ,QAAQ,EAAE;UACpB;UACI,IAAII,KAAK,CAACJ,QAAQ,CAACK,MAAK,IAAK,GAAE,IAAKD,KAAK,CAACJ,QAAQ,CAACK,MAAK,GAAI,GAAG,EAAE;YAC7D;YACAV,KAAK,CAACS,KAAK,CAACJ,QAAQ,CAAChB,IAAI,CAAC;UAC9B,OAAO;YACH;YACA,IAAI,CAACK,aAAY,GAAIe,KAAK,CAACJ,QAAQ,CAAChB,IAAI;UAC5C;QACR;MACA;IACH,CAAC;IACDsB,YAAYA,CAACC,KAAK,EAAE;MACjB,OAAO,CAACA,KAAI,IAAKA,KAAK,CAACC,IAAI,CAAC,MAAM,EAAE;IACvC,CAAC;IACDd,eAAeA,CAAA,EAAG;MACf;MACA,OAAOe,MAAM,CAACC,MAAM,CAAC,IAAI,CAACxB,QAAQ,CAAC,CAACyB,IAAI,CAACJ,KAAI,IAAK,IAAI,CAACD,YAAY,CAACC,KAAK,CAAC,CAAC;IAC/E;EAEA;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}