{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main\"\n};\nconst _hoisted_2 = {\n  class: \"main_page\"\n};\nconst _hoisted_3 = {\n  class: \"main_pageItem\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"미식 일기\", -1);\nconst _hoisted_5 = {\n  class: \"mb-3 row\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"inputId\",\n  class: \"col-sm-2 col-form-label\"\n}, \"아이디\", -1);\nconst _hoisted_7 = {\n  class: \"col-sm-10\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"text-danger\"\n};\nconst _hoisted_10 = {\n  class: \"mb-3 row\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"inputPassword\",\n  class: \"col-sm-2 col-form-label\"\n}, \"비밀번호\", -1);\nconst _hoisted_12 = {\n  class: \"col-sm-10\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_14 = {\n  key: 1,\n  class: \"text-danger\"\n};\nconst _hoisted_15 = {\n  class: \"d-grid gap-2\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-secondary gray\",\n  type: \"submit\"\n}, \"로그인\", -1);\nconst _hoisted_17 = {\n  class: \"login_func\"\n};\nconst _hoisted_18 = {\n  class: \"main_pageItem_btn\"\n};\nconst _hoisted_19 = {\n  class: \"btn btn-link\",\n  type: \"button\"\n};\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-link\",\n  type: \"button\"\n}, \"비밀번호 찾기\", -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"inputId\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.loginId = $event)\n  }, null, 512), [[_vModelText, $data.formData.loginId]]), $options.isInputEmpty($data.formData.loginId) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"아이디를 입력하세요.\")) : _createCommentVNode(\"\", true), $data.errorMessages.loginId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _toDisplayString($data.errorMessages.loginId), 1)) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"div\", _hoisted_12, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"inputPassword\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.password = $event)\n  }, null, 512), [[_vModelText, $data.formData.password]]), $options.isInputEmpty($data.formData.password) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, \"비밀번호를 입력하세요.\")) : _createCommentVNode(\"\", true), $data.errorMessages.password ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _toDisplayString($data.errorMessages.password), 1)) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_15, [_hoisted_16, _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"button\", {\n    class: \"btn btn-link\",\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.generalLogin && $options.generalLogin(...args))\n  }, \"회원가입\"), _createElementVNode(\"button\", _hoisted_19, \"아이디 찾기\" + _toDisplayString($data.message), 1), _hoisted_20])])])])])], 32)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_5","_hoisted_6","_hoisted_7","id","$data","formData","loginId","$event","isInputEmpty","_hoisted_8","errorMessages","_hoisted_9","_toDisplayString","_hoisted_10","_hoisted_11","_hoisted_12","password","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","onClick","generalLogin","_hoisted_19","message","_hoisted_20"],"sources":["/Users/jangsubhin/캡스톤디자인/gourmetdiary/vue/gourmetdiary/src/components/LoginPage.vue"],"sourcesContent":["<template>\n   <div class=\"main\">\n        <div class=\"main_page\">\n            <div class=\"main_pageItem\">\n                <h1>미식 일기</h1>\n              <form @submit.prevent=\"submitForm\">\n                \n                <div class=\"mb-3 row\">\n                    <label for=\"inputId\" class=\"col-sm-2 col-form-label\">아이디</label>\n                    <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" id=\"inputId\" v-model=\"formData.loginId\">\n                        \n                         <!-- 입력 값이 없을 때 메시지 -->\n                        <div v-if=\"isInputEmpty(formData.loginId)\" class=\"text-danger\">아이디를 입력하세요.</div>\n                        <div v-if=\"errorMessages.loginId\" class=\"text-danger\">{{ errorMessages.loginId }}</div>\n                    </div>\n                \n                </div>\n\n                <div class=\"mb-3 row\">\n                    <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">비밀번호</label>\n                    <div class=\"col-sm-10\">\n                        <input type=\"password\" class=\"form-control\" id=\"inputPassword\" v-model=\"formData.password\">\n                        \n                         <!-- 입력 값이 없을 때 메시지 -->\n                    <div v-if=\"isInputEmpty(formData.password)\" class=\"text-danger\">비밀번호를 입력하세요.</div>\n                    <div v-if=\"errorMessages.password\" class=\"text-danger\">{{ errorMessages.password }}</div>\n\n                        <div class=\"d-grid gap-2\">\n                            <button class=\"btn btn-secondary gray\" type=\"submit\">로그인</button>\n                            <div class=\"login_func\">\n                                <div class=\"main_pageItem_btn\">\n                                    <button class=\"btn btn-link\" type=\"button\" @click=\"generalLogin\">회원가입</button>\n                                    <button class=\"btn btn-link\" type=\"button\" >아이디 찾기{{message}}</button>\n                                    <button class=\"btn btn-link\" type=\"button\" >비밀번호 찾기</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n              </form>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n    name: \"LoginPage\",\n    data () {\n        return {\n            message : \"\",\n            formData : {\n                loginId: '',\n                password: '',\n            },\n            errorMessages: {\n                loginId: '',\n                password: '',\n            },\n        };\n    },\n    mounted() {\n      this.fetchHelloMessage();\n    },\n    methods: {\n\n        submitForm() {\n            this.errorMessages = {\n                loginId : '',\n                password: '',\n            };\n\n            if (this.isAnyInputEmpty()) {\n            alert('모든 항목을 입력하세요.');\n            return;\n        }\n\n        this.sendDataToSerever(this.formData);\n\n        },\n\n        generalLogin() {\n            this.$router.push('/login/generallogin');\n        },\n        \n\n        async fetchHelloMessage() {\n      try {\n\n        const response = await fetch(\"http://localhost:8080/login\");\n        const data = await response.text();\n        this.message = data;\n\n      } catch (error) {\n    \n        console.error(\"Error fetching hello message:\", error);\n      }\n    },\n\n    \n    async sendDataToSerever(data) {\n        try {\n            const response = await axios.post('http://localhost:8080/login/',data);\n            console.log(\"response from server\", response.data);\n            this.$router.pust(\"/map\");\n        } catch (error) {\n            console.error('Error seding data to server', error);\n\n            if (error.response) {\n            // 서버 응답이 400대인 경우\n                if (error.response.status >= 400 && error.response.status < 500) {\n                    // 여기에 클라이언트에게 알리고자 하는 작업을 추가\n                    alert(error.response.data);\n                } else {\n                    // 다른 상태 코드의 경우 에러 메시지만 설정\n                    this.errorMessages = error.response.data;\n                }\n        }\n        }\n     },\n     isInputEmpty(value) {\n        return !value || value.trim() === '';\n     },\n     isAnyInputEmpty() {\n        // 입력 값이 하나라도 비어있으면 true 반환\n        return Object.values(this.formData).some(value => this.isInputEmpty(value));\n    }\n        \n    },\n}\n</script>\n\n<style>\n.main {\n    position: absolute;\n    bottom: 0;\n    right : 0;\n    display: flex;\n\n}\n.main_page {\n    width:85vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.main_pageItem {\n    width: 500px;\n}\n\n.main_pageItem h1{\n    margin-bottom: 1em;\n    margin-left: 2em;\n}\n\n.login_pageItem_object label{\n    width: 110px;\n}\n\n.gray {\n    margin-top : 2em;\n}\n\n.login_func {\n    display: flex;\n    flex-direction: row;\n\n}\n\n\n\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}